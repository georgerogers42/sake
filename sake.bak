(define (all f lst)
  (cond ((null? lst)
	 #t)
	((f (car lst))
	 (all f (cdr lst)))
	(else
	 #f)))
(define (updated? fname)
  (not (file-exists? fname)))
(define (run-task task)
  (cond ((string? task)
	 (updated? task))
	(else
	 (force task))))
(define (run . tasks)
  (all run-task tasks))
(define-syntax (file x)
  (syntax-case x ()
    ((_ (fname deps ...) body ...)
     #'(delay 
	 (and (run fname deps ...)
	      (begin body ...))))))
(define-syntax (task x)
  (syntax-case x ()
    ((_ (deps ...) body ...)
     #'(delay (and (run deps ...)
		   (begin body ...))))))